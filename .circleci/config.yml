version: 2.1

####
# Variables
####
var_1: &working_directory ~/tmp
var_2: &cache_key ow.web-app-{{ checksum "package-lock.json" }}

####
# Anchors
####
anchor_1: &docker-config
  working_directory: *working_directory
  docker:
    - image: cimg/node:14.18.2-browsers
  resource_class: small
  environment:
    TZ: 'Europe/London'
    TERM: xterm

anchor_2: &root_package_lock_key
  key: *cache_key

anchor_3: &fast-checkout
  attach_workspace:
    at: *working_directory

anchor_4: &workspace_config
  root: *working_directory
  paths:
    - .

anchor_5: &delete_node_modules
  name: Delete node_modules so we can persist quickly
  command: rm -R -f ~/tmp/node_modules

####
# Jobs
####
jobs:
  checkout:
    <<: *docker-config
    steps:
      - checkout
      # Log the current branch
      - run:
          name: show current branch
          command: echo ${CIRCLE_BRANCH}
      - run: rm -rf .git
      - restore_cache: *root_package_lock_key
      - run:
          name: install-dependencies
          command: |
            npm ci
      - save_cache:
          <<: *root_package_lock_key
          paths:
            - ~/.npm
            - ~/.cache
            - ~/tmp/node_modules
      - run: *delete_node_modules
      - persist_to_workspace: *workspace_config

  lint:
    <<: *docker-config
    steps:
      - *fast-checkout
      - restore_cache: *root_package_lock_key
      - run:
          name: linting the project
          command: npm run lint

  unit_tests:
    <<: *docker-config
    steps:
      - *fast-checkout
      - restore_cache: *root_package_lock_key
      - run:
          name: App Unit tests
          command: npm run test:unit
      - store_test_results:
          path: 'reports/junit'
      - save_cache:
          <<: *root_package_lock_key
          paths:
            - ~/.npm
            - ~/.cache
            - ~/tmp/node_modules
      - run: *delete_node_modules
      - persist_to_workspace: *workspace_config

  e2e:
    <<: *docker-config
    steps:
      - *fast-checkout
      - restore_cache: *root_package_lock_key
      - run:
          name: App e2e tests
          command: npm run test:e2e
      - store_artifacts:
          path: output/e2e/videos
          destination: e2e
      - run: *delete_node_modules
      - persist_to_workspace: *workspace_config

  build:
    <<: *docker-config
    steps:
      - *fast-checkout
      - restore_cache: *root_package_lock_key
      - run:
          name: Build the app
          command: >-
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                npm run build
            else
                npm run build:dev
            fi
      - run: *delete_node_modules
      - persist_to_workspace: *workspace_config

  docs:
    <<: *docker-config
    steps:
      - *fast-checkout
      - restore_cache: *root_package_lock_key
      - run:
          name: Generate build xml
          command: |
            echo '<build build='"\"$CIRCLE_BUILD_NUM"\"' url='"\"$CIRCLE_BUILD_URL"\"' timestamp='"\"$(date)"\"'><github sha='"\"$CIRCLE_SHA1"\"' url='"\"https://github.com/mporium/mporium.web-app/commit/$CIRCLE_SHA1"\"'></github></build>' > ./build.xml
            mv ./build.xml dist
      - run: *delete_node_modules
      - persist_to_workspace: *workspace_config

  deploy:
    working_directory: *working_directory
    docker:
      - image: mcr.microsoft.com/appsvc/staticappsclient:stable
    environment:
      TZ: 'Europe/London'
      TERM: xterm
    steps:
      - *fast-checkout
      - restore_cache: *root_package_lock_key
      - run:
          name: Deploy the app
          command: |
            /bin/staticsites/StaticSitesClient upload --verbose --app ./dist --skipAppBuild true --apiToken $STATIC_WEB_APP_DEPLOYMENT_KEY
      - run: *delete_node_modules
      - persist_to_workspace: *workspace_config

####
# Workflows
####
workflows:
  version: 2
  build-deploy:
    jobs:
      - checkout
      - lint:
          requires:
            - checkout
      - unit_tests:
          requires:
            - checkout
#      - e2e:
#          requires:
#             - checkout
      - build:
          requires:
            - checkout
      - docs:
          requires:
            - build
            - lint
            - unit_tests
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - docs
          filters:
            branches:
              only:
                - master
